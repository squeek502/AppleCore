// Import all Opcodes constants into the global namespace
var Opcodes = Java.type("org.objectweb.asm.Opcodes");
var NOP = Opcodes.NOP;
var ACONST_NULL = Opcodes.ACONST_NULL;
var ICONST_M1 = Opcodes.ICONST_M1;
var ICONST_0 = Opcodes.ICONST_0;
var ICONST_1 = Opcodes.ICONST_1;
var ICONST_2 = Opcodes.ICONST_2;
var ICONST_3 = Opcodes.ICONST_3;
var ICONST_4 = Opcodes.ICONST_4;
var ICONST_5 = Opcodes.ICONST_5;
var LCONST_0 = Opcodes.LCONST_0;
var LCONST_1 = Opcodes.LCONST_1;
var FCONST_0 = Opcodes.FCONST_0;
var FCONST_1 = Opcodes.FCONST_1;
var FCONST_2 = Opcodes.FCONST_2;
var DCONST_0 = Opcodes.DCONST_0;
var DCONST_1 = Opcodes.DCONST_1;
var BIPUSH = Opcodes.BIPUSH;
var SIPUSH = Opcodes.SIPUSH;
var LDC = Opcodes.LDC;
var ILOAD = Opcodes.ILOAD;
var LLOAD = Opcodes.LLOAD;
var FLOAD = Opcodes.FLOAD;
var DLOAD = Opcodes.DLOAD;
var ALOAD = Opcodes.ALOAD;
var IALOAD = Opcodes.IALOAD;
var LALOAD = Opcodes.LALOAD;
var FALOAD = Opcodes.FALOAD;
var DALOAD = Opcodes.DALOAD;
var AALOAD = Opcodes.AALOAD;
var BALOAD = Opcodes.BALOAD;
var CALOAD = Opcodes.CALOAD;
var SALOAD = Opcodes.SALOAD;
var ISTORE = Opcodes.ISTORE;
var LSTORE = Opcodes.LSTORE;
var FSTORE = Opcodes.FSTORE;
var DSTORE = Opcodes.DSTORE;
var ASTORE = Opcodes.ASTORE;
var IASTORE = Opcodes.IASTORE;
var LASTORE = Opcodes.LASTORE;
var FASTORE = Opcodes.FASTORE;
var DASTORE = Opcodes.DASTORE;
var AASTORE = Opcodes.AASTORE;
var BASTORE = Opcodes.BASTORE;
var CASTORE = Opcodes.CASTORE;
var SASTORE = Opcodes.SASTORE;
var POP = Opcodes.POP;
var POP2 = Opcodes.POP2;
var DUP = Opcodes.DUP;
var DUP_X1 = Opcodes.DUP_X1;
var DUP_X2 = Opcodes.DUP_X2;
var DUP2 = Opcodes.DUP2;
var DUP2_X1 = Opcodes.DUP2_X1;
var DUP2_X2 = Opcodes.DUP2_X2;
var SWAP = Opcodes.SWAP;
var IADD = Opcodes.IADD;
var LADD = Opcodes.LADD;
var FADD = Opcodes.FADD;
var DADD = Opcodes.DADD;
var ISUB = Opcodes.ISUB;
var LSUB = Opcodes.LSUB;
var FSUB = Opcodes.FSUB;
var DSUB = Opcodes.DSUB;
var IMUL = Opcodes.IMUL;
var LMUL = Opcodes.LMUL;
var FMUL = Opcodes.FMUL;
var DMUL = Opcodes.DMUL;
var IDIV = Opcodes.IDIV;
var LDIV = Opcodes.LDIV;
var FDIV = Opcodes.FDIV;
var DDIV = Opcodes.DDIV;
var IREM = Opcodes.IREM;
var LREM = Opcodes.LREM;
var FREM = Opcodes.FREM;
var DREM = Opcodes.DREM;
var INEG = Opcodes.INEG;
var LNEG = Opcodes.LNEG;
var FNEG = Opcodes.FNEG;
var DNEG = Opcodes.DNEG;
var ISHL = Opcodes.ISHL;
var LSHL = Opcodes.LSHL;
var ISHR = Opcodes.ISHR;
var LSHR = Opcodes.LSHR;
var IUSHR = Opcodes.IUSHR;
var LUSHR = Opcodes.LUSHR;
var IAND = Opcodes.IAND;
var LAND = Opcodes.LAND;
var IOR = Opcodes.IOR;
var LOR = Opcodes.LOR;
var IXOR = Opcodes.IXOR;
var LXOR = Opcodes.LXOR;
var IINC = Opcodes.IINC;
var I2L = Opcodes.I2L;
var I2F = Opcodes.I2F;
var I2D = Opcodes.I2D;
var L2I = Opcodes.L2I;
var L2F = Opcodes.L2F;
var L2D = Opcodes.L2D;
var F2I = Opcodes.F2I;
var F2L = Opcodes.F2L;
var F2D = Opcodes.F2D;
var D2I = Opcodes.D2I;
var D2L = Opcodes.D2L;
var D2F = Opcodes.D2F;
var I2B = Opcodes.I2B;
var I2C = Opcodes.I2C;
var I2S = Opcodes.I2S;
var LCMP = Opcodes.LCMP;
var FCMPL = Opcodes.FCMPL;
var FCMPG = Opcodes.FCMPG;
var DCMPL = Opcodes.DCMPL;
var DCMPG = Opcodes.DCMPG;
var IFEQ = Opcodes.IFEQ;
var IFNE = Opcodes.IFNE;
var IFLT = Opcodes.IFLT;
var IFGE = Opcodes.IFGE;
var IFGT = Opcodes.IFGT;
var IFLE = Opcodes.IFLE;
var IF_ICMPEQ = Opcodes.IF_ICMPEQ;
var IF_ICMPNE = Opcodes.IF_ICMPNE;
var IF_ICMPLT = Opcodes.IF_ICMPLT;
var IF_ICMPGE = Opcodes.IF_ICMPGE;
var IF_ICMPGT = Opcodes.IF_ICMPGT;
var IF_ICMPLE = Opcodes.IF_ICMPLE;
var IF_ACMPEQ = Opcodes.IF_ACMPEQ;
var IF_ACMPNE = Opcodes.IF_ACMPNE;
var GOTO = Opcodes.GOTO;
var JSR = Opcodes.JSR;
var RET = Opcodes.RET;
var TABLESWITCH = Opcodes.TABLESWITCH;
var LOOKUPSWITCH = Opcodes.LOOKUPSWITCH;
var IRETURN = Opcodes.IRETURN;
var LRETURN = Opcodes.LRETURN;
var FRETURN = Opcodes.FRETURN;
var DRETURN = Opcodes.DRETURN;
var ARETURN = Opcodes.ARETURN;
var RETURN = Opcodes.RETURN;
var GETSTATIC = Opcodes.GETSTATIC;
var PUTSTATIC = Opcodes.PUTSTATIC;
var GETFIELD = Opcodes.GETFIELD;
var PUTFIELD = Opcodes.PUTFIELD;
var INVOKEVIRTUAL = Opcodes.INVOKEVIRTUAL;
var INVOKESPECIAL = Opcodes.INVOKESPECIAL;
var INVOKESTATIC = Opcodes.INVOKESTATIC;
var INVOKEINTERFACE = Opcodes.INVOKEINTERFACE;
var INVOKEDYNAMIC = Opcodes.INVOKEDYNAMIC;
var NEW = Opcodes.NEW;
var NEWARRAY = Opcodes.NEWARRAY;
var ANEWARRAY = Opcodes.ANEWARRAY;
var ARRAYLENGTH = Opcodes.ARRAYLENGTH;
var ATHROW = Opcodes.ATHROW;
var CHECKCAST = Opcodes.CHECKCAST;
var INSTANCEOF = Opcodes.INSTANCEOF;
var MONITORENTER = Opcodes.MONITORENTER;
var MONITOREXIT = Opcodes.MONITOREXIT;
var MULTIANEWARRAY = Opcodes.MULTIANEWARRAY;
var IFNULL = Opcodes.IFNULL;
var IFNONNULL = Opcodes.IFNONNULL;
// access flags
var ACC_PUBLIC = Opcodes.ACC_PUBLIC;
var ACC_PRIVATE = Opcodes.ACC_PRIVATE;
var ACC_PROTECTED = Opcodes.ACC_PROTECTED;
var ACC_STATIC = Opcodes.ACC_STATIC;
var ACC_FINAL = Opcodes.ACC_FINAL;
var ACC_SUPER = Opcodes.ACC_SUPER;
var ACC_SYNCHRONIZED = Opcodes.ACC_SYNCHRONIZED;
var ACC_OPEN = Opcodes.ACC_OPEN;
var ACC_TRANSITIVE = Opcodes.ACC_TRANSITIVE;
var ACC_VOLATILE = Opcodes.ACC_VOLATILE;
var ACC_BRIDGE = Opcodes.ACC_BRIDGE;
var ACC_STATIC_PHASE = Opcodes.ACC_STATIC_PHASE;
var ACC_VARARGS = Opcodes.ACC_VARARGS;
var ACC_TRANSIENT = Opcodes.ACC_TRANSIENT;
var ACC_NATIVE = Opcodes.ACC_NATIVE;
var ACC_INTERFACE = Opcodes.ACC_INTERFACE;
var ACC_ABSTRACT = Opcodes.ACC_ABSTRACT;
var ACC_STRICT = Opcodes.ACC_STRICT;
var ACC_SYNTHETIC = Opcodes.ACC_SYNTHETIC;
var ACC_ANNOTATION = Opcodes.ACC_ANNOTATION;
var ACC_ENUM = Opcodes.ACC_ENUM;
var ACC_MANDATED = Opcodes.ACC_MANDATED;
var ACC_MODULE = Opcodes.ACC_MODULE;