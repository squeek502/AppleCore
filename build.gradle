buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: false
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
	mappings channel: mappings_channel, version: mappings_version

	runs {
		client {
			workingDirectory project.file('run')
			mods {
				applecore {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')
			mods {
				applecore {
					source sourceSets.main
				}
			}
		}
	}
}

dependencies {
	minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version
}

group = "squeek.applecore"
def modName = "AppleCore"
def modId = "applecore"
archivesBaseName = modName + "-mc" + minecraft_version

if (version == "unspecified")
	version = ""
if (System.getenv("TRAVIS_BUILD_NUMBER") != null)
	version += (version ? "+" : "") + "${System.getenv("TRAVIS_BUILD_NUMBER").toInteger() + 230}"
if (System.getenv("TRAVIS_COMMIT") != null)
	version += (version ? "." : "") + "${System.getenv("TRAVIS_COMMIT").take(5)}"

sourceSets.main.java.srcDirs += 'java'
sourceSets.main.java.srcDirs += 'apis'
sourceSets.main.resources.srcDirs += 'resources'

task deobfArtifact(type: Jar) {
	from sourceSets.main.output
	manifest = jar.manifest
	classifier = 'deobf'
}

task apiArtifact(type: Jar, dependsOn: compileJava) {
	from sourceSets.main.output
	include "squeek/applecore/api/**"
	classifier = 'api'
}

task sourcesArtifact(type: Jar, dependsOn: compileJava) {
	from sourceSets.main.allJava
	classifier = 'sources'
}

artifacts {
	archives deobfArtifact
	archives apiArtifact
	archives sourcesArtifact
}

jar {
	manifest {
		attributes([
			"Implementation-Version": project.version,
		])
	}
}

// TODO: does this work right?
task removeExampleAndReferenceSources(type:Delete) {
	delete += sourceSets.main.java.outputDir.getPath()+"/squeek/applecore/example"
	delete += sourceSets.main.java.outputDir.getPath()+"/squeek/applecore/asm/reference"
}

// TODO: port this, depends on how example mod works now
task removeExampleAndReferenceResources(type:Delete) {
	delete += file(sourceSets.main.output.resourcesDir.getPath()+"/mcmod.info")
}

// insert custom tasks
afterEvaluate { project ->
	if (!project.hasProperty('buildexample'))
	{
		compileJava.dependsOn(removeExampleAndReferenceSources)
		processResources.finalizedBy(removeExampleAndReferenceResources)
	}
}

ext.mavenUrl = project.hasProperty('mavenUrl') ? mavenUrl : System.getenv("MAVEN_URL")
ext.mavenUser = project.hasProperty('mavenUser') ? mavenUser : System.getenv("MAVEN_USER")
ext.mavenPass = project.hasProperty('mavenPass') ? mavenPass : System.getenv("MAVEN_PASS")
def isPullRequest = System.getenv("TRAVIS_PULL_REQUEST") != null && System.getenv("TRAVIS_PULL_REQUEST") != false
def isCI = System.getenv("CI") == true
def isMainBranch = System.getenv("TRAVIS_BRANCH") == project.minecraft_version
def okayToPublish = !isCI || (!isPullRequest && isMainBranch)

if (mavenUrl && !project.hasProperty('nopublish') && okayToPublish) {
	apply plugin: 'maven'

	configurations {
		deployerJars
	}
	dependencies {
		deployerJars "org.apache.maven.wagon:wagon-webdav:1.0-beta-2"
	}
	uploadArchives {
		repositories.mavenDeployer {
			configuration = configurations.deployerJars
			pom.artifactId = modId
			pom.version = project.minecraft_version + "-" + project.version
			pom.project {
				url = "https://github.com/squeek502/" + modId
			}
			repository(url: mavenUrl) {
				authentication(userName: mavenUser, password: mavenPass)
			}
		}
	}
	afterEvaluate { project ->
		build.finalizedBy(uploadArchives)
	}
}

task testPom << {
	apply plugin: 'maven'
	pom {
		whenConfigured {pom ->
			//pom.dependencies.removeAll {dep -> dep.groupId == "squeek.asmhelper" }
		}
	}.writeTo(new PrintWriter(System.out))
}